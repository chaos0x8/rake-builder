diff --git a/examples/current-dir/rakefile.rb b/examples/current-dir/rakefile.rb
index b156198..1bf2cde 100644
--- a/examples/current-dir/rakefile.rb
+++ b/examples/current-dir/rakefile.rb
@@ -1,4 +1,4 @@
-gem 'rake-builder', '~> 2.0', '>= 2.0.0'
+gem 'rake-builder', '~> 3.0'
 
 autoload :FileUtils, 'fileutils'
 
diff --git a/examples/generated-file/rakefile.rb b/examples/generated-file/rakefile.rb
index fb30490..3977198 100644
--- a/examples/generated-file/rakefile.rb
+++ b/examples/generated-file/rakefile.rb
@@ -1,6 +1,4 @@
-#!/usr/bin/ruby
-
-gem 'rake-builder', '~> 2.0', '>= 2.0.4'
+gem 'rake-builder', '~> 3.0'
 
 autoload :FileUtils, 'fileutils'
 
diff --git a/examples/git-submodule/rakefile.rb b/examples/git-submodule/rakefile.rb
index 66e1289..8cacd6c 100644
--- a/examples/git-submodule/rakefile.rb
+++ b/examples/git-submodule/rakefile.rb
@@ -1,6 +1,4 @@
-#!/usr/bin/ruby
-
-gem 'rake-builder', '~> 2.0'
+gem 'rake-builder', '~> 3.0'
 
 require 'rake-builder'
 
diff --git a/examples/include-directory/rakefile.rb b/examples/include-directory/rakefile.rb
index 5b52204..7fdf8af 100644
--- a/examples/include-directory/rakefile.rb
+++ b/examples/include-directory/rakefile.rb
@@ -1,6 +1,4 @@
-#!/usr/bin/ruby
-
-gem 'rake-builder', '~> 2.0', '>= 2.0.1'
+gem 'rake-builder', '~> 3.0'
 
 autoload :FileUtils, 'fileutils'
 
diff --git a/examples/install-pkg/rakefile.rb b/examples/install-pkg/rakefile.rb
index c6798cc..19c0892 100644
--- a/examples/install-pkg/rakefile.rb
+++ b/examples/install-pkg/rakefile.rb
@@ -1,6 +1,4 @@
-#!/usr/bin/ruby
-
-gem 'rake-builder', '~> 2.0', '>= 2.0.0'
+gem 'rake-builder', '~> 3.0'
 
 autoload :FileUtils, 'fileutils'
 
diff --git a/examples/namespaces/rakefile.rb b/examples/namespaces/rakefile.rb
index 575b3c5..da5a769 100644
--- a/examples/namespaces/rakefile.rb
+++ b/examples/namespaces/rakefile.rb
@@ -1,6 +1,4 @@
-#!/usr/bin/ruby
-
-gem 'rake-builder', '~> 2.0', '>= 2.0.5'
+gem 'rake-builder', '~> 3.0'
 
 autoload :FileUtils, 'fileutils'
 
diff --git a/examples/shared-sources/rakefile.rb b/examples/shared-sources/rakefile.rb
index f376bbb..dea0c80 100644
--- a/examples/shared-sources/rakefile.rb
+++ b/examples/shared-sources/rakefile.rb
@@ -1,6 +1,4 @@
-#!/usr/bin/ruby
-
-gem 'rake-builder', '~> 2.0', '>= 2.0.0'
+gem 'rake-builder', '~> 3.0'
 
 autoload :FileUtils, 'fileutils'
 
@@ -8,42 +6,47 @@ require 'rake-builder'
 
 install = InstallPkg.new(name: :install, pkgs: ['ruby-dev'])
 
-sources = mkSources(
-  Dir['Source/*.cpp'] - ['Source/main.cpp'],
-  flags: ['--std=c++17'],
-  pkgs: ['ruby'],
-  includes: ['Source'],
-  requirements: install)
+sources = SharedSources.new { |t|
+  t.sources << Dir['Source/*.cpp'] - ['Source/main.cpp']
+  t.flags << ['--std=c++17']
+  t.includes << ['Source']
+  t.pkgs << ['ruby']
+  t.requirements << install
+}
+
+main = SharedSources.new { |t|
+  t.sources << ['Source/main.cpp']
+  t.flags << ['--std=c++17']
+  t.includes << ['Source']
+  t.pkgs << ['ruby']
+  t.requirements << install
+}
 
 lib = Library.new { |t|
   t.name = 'lib/libmain.a'
-  t.sources << sources
   t.desc = 'Build testable library'
+
+  sources.stream(:flags, :pkgs, :includes) >> t
 }
 
-main = Executable.new { |t|
+app = Executable.new { |t|
   t.name = 'bin/main'
-  t.requirements << install
-  t.sources << Dir['Source/main.cpp']
-  t.includes << ['Source']
-  t.flags << ['--std=c++0x']
   t.libs << ['-lpthread', lib]
-  t.pkgs << ['ruby']
   t.desc = 'Build testable application'
+
+  main.stream(:pkgs) >> t
 }
 
-main_without_lib = Executable.new { |t|
+app_without_lib = Executable.new { |t|
   t.name = 'bin/main_without_lib'
-  t.requirements << install
-  t.sources << Dir['Source/main.cpp'] << sources
-  t.includes << ['Source']
-  t.flags << ['--std=c++0x']
   t.libs << ['-lpthread']
-  t.pkgs << ['ruby']
   t.desc = 'Build testable application'
+
+  main >> t
+  sources >> t
 }
 
-multitask(default: Names[main, main_without_lib])
+multitask(default: Names[app, app_without_lib])
 
 task(:clean) {
   [ 'lib', 'bin', '.obj' ].each { |fn|
diff --git a/lib/rake-builder.rb b/lib/rake-builder.rb
index 948c301..e05f54a 100644
--- a/lib/rake-builder.rb
+++ b/lib/rake-builder.rb
@@ -11,13 +11,13 @@ require_relative 'rake-builder/ComponentList.rb'
 require_relative 'rake-builder/Directory.rb'
 require_relative 'rake-builder/Errors.rb'
 require_relative 'rake-builder/GitSubmodule.rb'
-require_relative 'rake-builder/MkSource.rb'
 require_relative 'rake-builder/Names.rb'
 require_relative 'rake-builder/OptionParser.rb'
 require_relative 'rake-builder/PkgConfig.rb'
 require_relative 'rake-builder/Pkgs.rb'
 require_relative 'rake-builder/RakeBuilder.rb'
 require_relative 'rake-builder/RakeInstaller.rb'
+require_relative 'rake-builder/SharedSources.rb'
 require_relative 'rake-builder/SourceFile.rb'
 require_relative 'rake-builder/Transform.rb'
 require_relative 'rake-builder/Utility.rb'
diff --git a/lib/rake-builder/Build.rb b/lib/rake-builder/Build.rb
index 5c227b4..ab96b3d 100644
--- a/lib/rake-builder/Build.rb
+++ b/lib/rake-builder/Build.rb
@@ -10,7 +10,7 @@ class Build
       else
         a.to_s
       end
-    }.flatten
+    }.flatten.uniq.compact
   end
 end
 
diff --git a/lib/rake-builder/MkSource.rb b/lib/rake-builder/MkSource.rb
deleted file mode 100644
index 74f7a39..0000000
--- a/lib/rake-builder/MkSource.rb
+++ /dev/null
@@ -1,13 +0,0 @@
-def mkSources sources, flags: [], includes: [], pkgs: [], requirements: []
-  flags = RakeBuilder::Flags.new(flags)
-  libs = RakeBuilder::Libs.new([])
-  pkgs = RakeBuilder::Pkgs.new(pkgs, flags: flags, libs: libs)
-  includes = RakeBuilder::Includes.new(includes)
-
-  RakeBuilder::Sources.new(
-    sources,
-    flags: flags,
-    includes: includes,
-    requirements: requirements)
-end
-
diff --git a/lib/rake-builder/Names.rb b/lib/rake-builder/Names.rb
index 73def6a..dab41fa 100644
--- a/lib/rake-builder/Names.rb
+++ b/lib/rake-builder/Names.rb
@@ -10,6 +10,6 @@ class Names
       else
         a.to_s
       end
-    }.flatten.compact
+    }.flatten.uniq.compact
   end
 end
diff --git a/lib/rake-builder/RakeBuilder.rb b/lib/rake-builder/RakeBuilder.rb
index c5e35a4..30e76a1 100644
--- a/lib/rake-builder/RakeBuilder.rb
+++ b/lib/rake-builder/RakeBuilder.rb
@@ -28,38 +28,4 @@ module RakeBuilder
     attr_accessor :description
     alias_method :desc=, :description=
   end
-
-  module Track
-    def self.extended cls
-      cls.instance_eval {
-        @track = nil
-      }
-    end
-
-    def cl_ rebuild: [:change, :missing]
-      if @track.kind_of? Symbol
-        case @track
-        when :requirements
-          @cl_ ||= RakeBuilder::ComponentList.new(
-            name: to_cl(@name),
-            sources: Names[@requirements],
-            rebuild: rebuild)
-        when :sources
-          @cl_ ||= RakeBuilder::ComponentList.new(
-            name: to_cl(@name),
-            sources: @sources,
-            rebuild: rebuild)
-        else
-          raise UnknownOption.new(:track, @track)
-        end
-      elsif @track
-        @cl_ ||= RakeBuilder::ComponentList.new(
-          name: to_cl(@name),
-          sources: Names[@track],
-          rebuild: rebuild)
-      end
-    end
-
-    attr_accessor :track
-  end
 end
diff --git a/lib/rake-builder/RakeInstaller.rb b/lib/rake-builder/RakeInstaller.rb
index 708918d..7c4d791 100644
--- a/lib/rake-builder/RakeInstaller.rb
+++ b/lib/rake-builder/RakeInstaller.rb
@@ -5,10 +5,6 @@ require_relative 'Utility'
 require_relative 'Names'
 
 module RakeBuilder
-  class InstallPkgList < ArrayWrapper
-    include VIterable
-  end
-
   @@install_mutext = Mutex.new
 
   def install_lock &block
diff --git a/lib/rake-builder/array-wrapper.rb b/lib/rake-builder/array-wrapper.rb
index 2df4327..bc32714 100644
--- a/lib/rake-builder/array-wrapper.rb
+++ b/lib/rake-builder/array-wrapper.rb
@@ -1,6 +1,8 @@
 require_relative 'array-wrapper/ArrayWrapper.rb'
 require_relative 'array-wrapper/Flags.rb'
 require_relative 'array-wrapper/Includes.rb'
+require_relative 'array-wrapper/InstallPkgList.rb'
 require_relative 'array-wrapper/Libs.rb'
 require_relative 'array-wrapper/Requirements.rb'
-require_relative 'array-wrapper/Sources.rb'
\ No newline at end of file
+require_relative 'array-wrapper/Sources.rb'
+require_relative 'array-wrapper/Track.rb'
\ No newline at end of file
diff --git a/lib/rake-builder/array-wrapper/ArrayWrapper.rb b/lib/rake-builder/array-wrapper/ArrayWrapper.rb
index 9da3773..ee93da6 100644
--- a/lib/rake-builder/array-wrapper/ArrayWrapper.rb
+++ b/lib/rake-builder/array-wrapper/ArrayWrapper.rb
@@ -27,7 +27,7 @@ module RakeBuilder
           self << item.value
         else
           @value << item
-          @value = @value.flatten.uniq
+          @value = @value.flatten.uniq.compact
         end
       end
 
@@ -41,10 +41,4 @@ module RakeBuilder
   protected
     attr_reader :value
   end
-
-  module VIterable
-    def each(&block)
-      @value.each(&block)
-    end
-  end
 end
diff --git a/lib/rake-builder/array-wrapper/Requirements.rb b/lib/rake-builder/array-wrapper/Requirements.rb
index 5686166..cdd63fd 100644
--- a/lib/rake-builder/array-wrapper/Requirements.rb
+++ b/lib/rake-builder/array-wrapper/Requirements.rb
@@ -2,8 +2,6 @@ require_relative 'ArrayWrapper'
 
 module RakeBuilder
   class Requirements < ArrayWrapper
-    include VIterable
-
     def _names_
       @value
     end
diff --git a/lib/rake-builder/array-wrapper/Sources.rb b/lib/rake-builder/array-wrapper/Sources.rb
index db8ecda..23eb481 100644
--- a/lib/rake-builder/array-wrapper/Sources.rb
+++ b/lib/rake-builder/array-wrapper/Sources.rb
@@ -1,8 +1,8 @@
 require_relative 'ArrayWrapper'
 
 module RakeBuilder
-  class Sources
-    include Enumerable
+  class Sources < ArrayWrapper
+    attr_reader :flags, :includes, :requirements
 
     def initialize(sources, flags:, includes:, requirements:)
       @value = Array.new
@@ -14,8 +14,8 @@ module RakeBuilder
     end
 
     def << sources
-      [ sources ].flatten.uniq.each { |src|
-        if src.kind_of? Sources
+      [sources].flatten.uniq.compact.each { |src|
+        if src.kind_of? Sources or src.kind_of? SharedSources
           self << src.value
         elsif src.kind_of? SourceFile
           @value << src
@@ -35,6 +35,10 @@ module RakeBuilder
       @value
     end
 
+    def _build_
+      Build[@value]
+    end
+
     def - other
       @value.reject { |val|
         name = (val.kind_of?(SourceFile) ? val.name : val)
diff --git a/lib/rake-builder/generate/IncludeDirectory.rb b/lib/rake-builder/generate/IncludeDirectory.rb
index a5fb54a..edf1d1a 100644
--- a/lib/rake-builder/generate/IncludeDirectory.rb
+++ b/lib/rake-builder/generate/IncludeDirectory.rb
@@ -5,11 +5,12 @@ module Generate
   extend RakeBuilder::Transform
 
   def self.includeDirectory(dirName, requirements: [])
-    GeneratedFile.new(format: true, track: Dir["#{dirName}/*.h", "#{dirName}/*.hpp"]) { |t|
+    GeneratedFile.new(format: true) { |t|
       t.name = "#{dirName}.hpp"
 
       dir = Names[Directory.new(name: t.name)]
 
+      t.track Dir["#{dirName}/*.h", "#{dirName}/*.hpp"]
       t.requirements << requirements
       t.code = proc {
         $stdout.puts "Generating '#{t.name}'..."
@@ -18,7 +19,7 @@ module Generate
           d = []
           d << "#pragma once"
           d << ""
-          Dir["#{dirName}/*.h", "#{dirName}/*.hpp"].each { |req|
+          t.tracked.each { |req|
             d << "#include \"#{File.basename(dirName)}/#{File.basename(req)}\""
           }
           d.join "\n"
diff --git a/lib/rake-builder/target/GeneratedFile.rb b/lib/rake-builder/target/GeneratedFile.rb
index 1008cb5..9ab5f6e 100644
--- a/lib/rake-builder/target/GeneratedFile.rb
+++ b/lib/rake-builder/target/GeneratedFile.rb
@@ -5,6 +5,7 @@ require_relative '../RakeBuilder'
 require_relative '../Names'
 require_relative '../ComponentList'
 require_relative '../array-wrapper/Requirements'
+require_relative '../array-wrapper/Track'
 
 class GeneratedFile
   include RakeBuilder::Utility
@@ -13,9 +14,9 @@ class GeneratedFile
 
   attr_accessor :name, :action, :code, :requirements
 
-  def initialize(name: nil, action: nil, code: nil, description: nil, requirements: [], format: false, track: nil)
+  def initialize(name: nil, action: nil, code: nil, description: nil, requirements: [], format: false)
     extend RakeBuilder::Desc
-    extend RakeBuilder::Track
+    extend RakeBuilder::Track::Ext
 
     @name = name
     @action = action
@@ -23,7 +24,6 @@ class GeneratedFile
     @requirements = RakeBuilder::Requirements.new(requirements)
     @description = description
     @format = format
-    @track = track
 
     yield(self) if block_given?
 
@@ -52,7 +52,9 @@ class GeneratedFile
             txt = format_(txt)
           end
 
-          unless File.exist?(@name) and IO.read(@name) == txt
+          if File.exist?(@name) and IO.read(@name) == txt
+            FileUtils.touch(@name)
+          else
             IO.write(@name, txt)
           end
         end
diff --git a/lib/rake-builder/target/Target.rb b/lib/rake-builder/target/Target.rb
index f04acc7..3d8b836 100644
--- a/lib/rake-builder/target/Target.rb
+++ b/lib/rake-builder/target/Target.rb
@@ -1,5 +1,6 @@
 require_relative '../Utility'
 require_relative '../Transform'
+require_relative '../array-wrapper/Track'
 
 module RakeBuilder
   class Target
@@ -12,7 +13,7 @@ module RakeBuilder
 
     def initialize(name: nil, sources: [], includes: [], flags: [], libs: [], pkgs: [], requirements: [], description: nil)
       extend RakeBuilder::Desc
-      extend RakeBuilder::Track
+      extend RakeBuilder::Track::Ext
 
       @name = name
       @flags = RakeBuilder::Flags.new(flags)
@@ -22,7 +23,7 @@ module RakeBuilder
       @requirements = RakeBuilder::Requirements.new(requirements)
       @sources = RakeBuilder::Sources.new(sources, flags: @flags, includes: @includes, requirements: @requirements)
       @description = description
-      @track = :sources
+      track :sources
 
       yield(self) if block_given?
 
diff --git a/rake-builder.gemspec b/rake-builder.gemspec
index 45d9c57..74e088d 100644
--- a/rake-builder.gemspec
+++ b/rake-builder.gemspec
@@ -1,7 +1,7 @@
 Gem::Specification.new { |s|
   s.name        = 'rake-builder'
-  s.version     = '2.0.11'
-  s.date        = '2020-09-16'
+  s.version     = '3.0.0'
+  s.date        = '2020-09-21'
   s.summary     = "#{s.name} library"
   s.description = "Library for easier rakefile creation"
   s.authors     = ["chaos0x8"]
diff --git a/rakelib/generated.rake b/rakelib/generated.rake
index 2f33995..0409711 100644
--- a/rakelib/generated.rake
+++ b/rakelib/generated.rake
@@ -5,11 +5,13 @@ namespace(:generated) {
   generated = Dir['lib/rake-builder/*'].select { |dir|
     File.directory?(dir)
   }.collect { |dir|
-    GeneratedFile.new(track: :requirements) { |t|
+    GeneratedFile.new { |t|
       t.name = "#{dir}.rb"
-      t.requirements = Dir[File.join(dir, '*.rb')]
-      t.code = proc {
-        t.requirements.collect { |fn|
+      t.track FileList[File.join(dir, '*.rb')]
+      t.code = proc { |dst|
+        $stdout.puts "Generating #{dst} ..."
+
+        t.tracked.collect { |fn|
           "require_relative '#{File.basename(dir)}/#{File.basename(fn)}'"
         }.sort.join("\n")
       }
@@ -18,9 +20,12 @@ namespace(:generated) {
 
   GeneratedFile.new { |t|
     t.name = 'lib/rake-builder.rb'
-    t.requirements << FileList['lib/rake-builder/*.rb']
     t.requirements << Names[generated]
-    t.code = proc {
+    t.track :requirements
+    t.track FileList['lib/rake-builder/*.rb']
+    t.code = proc { |dst|
+      $stdout.puts "Generating #{dst} ..."
+
       content = []
       content << "#!/usr/bin/env ruby"
       content << ""
@@ -30,7 +35,7 @@ namespace(:generated) {
       content << ""
       content << "require 'rake'"
       content << ""
-      content << Names[t.requirements].collect { |fn|
+      content << Names[t.tracked].collect { |fn|
         "require_relative 'rake-builder/#{File.basename(fn)}'"
       }.sort
       content << ""
